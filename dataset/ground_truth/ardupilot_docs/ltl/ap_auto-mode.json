[
    {
        "sentence": "In Auto mode the copter will follow a pre-programmed mission script stored in the autopilot which is made up of navigation commands (i.e. waypoints) and \"do\" commands (i.e. commands that do not affect the location of the copter including triggering a camera shutter).",
        "formula": "G(A → (Fo ∧ (N ∨ D)))",
        "explanation": "This formula states that globally (G), when in Auto mode (A), the copter follows (Fo) a mission script composed of navigation commands (N) or 'do' commands (D). The temporal aspect is implicit in the following of commands over time."
    },
    {
        "sentence": "AUTO mode navigates between each waypoint in a straight line and as it approaches each waypoint follows a smooth curving path towards the next waypoint (S-Curve).",
        "formula": "G(A ∧ BWP → (S ∧ F(C U WP)))",
        "explanation": "This formula indicates that globally (G), when in AUTO mode (A) and between two waypoints(BWP), the copter moves in a straight line (S) and eventually (F) follows a curved path (C) as it approaches each waypoint. The temporal sequence is captured by the 'finally' operator."
    },
    {
        "sentence": "The speed is lowered below :ref:WPNAV_SPEED<WPNAV_SPEED>, as necessary, to keep the path within the set corner lateral acceleration limit parameter (:ref:WPNAV_ACCEL_C<WPNAV_ACCEL_C>).",
        "formula": "G(A → (H → L))",
        "explanation": "This formula indicates that globally (G), when in AUTO mode (A), if the copter is approaching a high-curvature path (H), then it lowers its speed (L). The implication captures the conditional nature of speed reduction."
    },
    {
        "sentence": "this smooth curving path as it changes direction to the next waypoint will not occur if the next naviation mission item after the waypoint is anything other than a normal waypoint, ie LAND, LOITER_TURNS, etc., etc.",
        "formula": "G(A ∧ N → C) ∧ G(A ∧ ¬N → ¬C)",
        "explanation": "This formula states that globally (G), in AUTO mode (A), if the next mission item is a normal waypoint (N), the copter follows a curved path (C), and if it's not a normal waypoint (¬N), the copter doesn't follow a curved path (¬C)."
    },
    {
        "sentence": "In these cases the copter will approach the waypoint, stop, and then proceed to the next navigation waypoint instead of smoothly curving in front of it and proceeding to that next navigation waypoint.",
        "formula": "G(A ∧ ¬N → (F(W) ∧ X(S ∧ X(P))))",
        "explanation": "This formula indicates that globally (G), in AUTO mode (A) with a non-normal waypoint (¬N), the copter eventually (F) reaches the waypoint (W), then (X) stops (S), and then (X(X)) proceeds (P) to the next waypoint. The nested 'next' operators capture the sequence of events."
    },
    {
        "sentence": "Also, small :ref:WPNAV_RADIUS<WPNAV_RADIUS> values will require that the curve be very small, effectively appearing like the non-S-Curve behavior explained above.",
        "formula": "G(R → ¬C)",
        "explanation": "This formula states that globally (G), if the WPNAV_RADIUS is small (R), then the copter doesn't follow a noticeable curved path (¬C). The implication captures the effect of small WPNAV_RADIUS values."
    },
    {
        "sentence": "All the same requirements apply including ensuring that vibration levels and compass interference levels are acceptable and that the GPS is functioning well including returning an HDOP of under 2.0.",
        "formula": "G(A → (V ∧ I ∧ GPS))",
        "explanation": "This formula indicates that globally (G), when in AUTO mode (A), acceptable vibration levels (V), acceptable interference levels (I), and good GPS function (GPS) must all be true. The conjunction (∧) ensures all conditions are met simultaneously."
    },
    {
        "sentence": "AUTO should be set-up as one of the :ref:Flight Modes <flight-modes> on the flight mode switch.",
        "formula": "G(M)",
        "explanation": "This formula states that globally, AUTO mode should be set up as a flight mode option (M). The 'finally' operator captures the eventual setup requirement."
    },
    {
        "sentence": "You must arm your copter before you can engage AUTO mode.",
        "formula": "G(A → R)",
        "explanation": "This formula indicates that globally (G), if the copter is not armed (¬R), then AUTO mode cannot be engaged (¬A). The implication captures the prerequisite of arming before engaging AUTO mode."
    },
    {
        "sentence": "The :ref:AUTO_OPTIONS<AUTO_OPTIONS> parameter can be used to alter this behaviour, allowing arming while in AUTO mode, and/or, allowing a mission takeoff command to start upon AUTO mode entry, even if the throttle has not been raised.",
        "formula": "G((P ∧ Q) → O)",
        "explanation": "This formula states that globally (G), if AUTO_OPTIONS is set (O), then arming in AUTO mode is allowed (P) and mission takeoff without raised throttle is allowed (Q). The disjunction (∨) captures the 'and/or' nature of the options."
    },
    {
        "sentence": "If starting the mission while the copter is on the ground the pilot should ensure the throttle is down, then switch to the Auto flight mode, then raise the throttle.",
        "formula": "G(S → (T ∧ X(A ∧ X(R))))",
        "explanation": "This formula indicates that globally (G), when starting from the ground (S), the throttle should be down (T), then (X) AUTO mode should be engaged (A), and then (X(X)) the throttle should be raised (R). The nested 'next' operators capture the sequence of actions."
    },
    {
        "sentence": "The moment that the throttle is raised above zero, the copter will begin the mission.",
        "formula": "G(R → X(M))",
        "explanation": "This formula states that globally (G), when the throttle is raised (R), in the next moment (X) the mission begins (M). The 'next' operator captures the immediate start of the mission upon throttle raise."
    },
    {
        "sentence": "If starting the mission from the air the mission will begin from the first command the moment that the flight mode switch is moved to Auto.",
        "formula": "G(A ∧ Fly → X(M))",
        "explanation": "This formula indicates that globally (G), when AUTO mode is engaged (A) while flying (Fly), in the next moment (X) the mission begins (M). The 'next' operator captures the immediate start of the mission upon switching to AUTO mode."
    },
    {
        "sentence": "If the first command in the mission is a take-off command but the vehicle is already above the take-off command's altitude the take-off command will be considered completed and the vehicle will move onto the next waypoint.",
        "formula": "G((T ∧ H) → (C ∧ X(N)))",
        "explanation": "This formula states that globally (G), if the first command is take-off (T) and the copter is already at a higher altitude (H), then the command is considered completed (C) and in the next moment (X) the copter moves to the next waypoint (N)."
    },
    {
        "sentence": "At any time the pilot can retake control from the autopilot by returning the flight mode switch to another flight mode such as Stabilize or Loiter.",
        "formula": "G(S → P)",
        "explanation": "This formula indicates that globally (G), it's always possible for the pilot to take control (P) by Switch mode(S). The 'finally' operator within the 'globally' operator captures the ability to retake control at any time."
    },
    {
        "sentence": "If the pilot then switches to AUTO again, the mission will resume from the last command.",
        "formula": "G((P ∧ X(A)) → X(R))",
        "explanation": "This formula states that globally (G), if the pilot has control (P) and then (X) switches to AUTO mode (A), in the next moment (X) the mission resumes (R). The nested 'next' operators capture the sequence of switching back to AUTO and resuming the mission."
    },
    {
    "sentence": "During the mission the pilot's roll, pitch and throttle inputs are ignored but the yaw can be overridden with the yaw stick.",
    "formula": "G(M → (¬(I ∨ P ∨ T) ∧ Y))",
    "explanation": "This formula indicates that globally (G), during the mission (M), roll inputs (I), pitch inputs (P), and throttle inputs (T) are ignored (negation ¬), but yaw inputs (Y) are allowed. The conjunction (∧) ensures that yaw control is maintained while other inputs are ignored."
    },
    {
        "sentence": "The autopilot will attempt to retake yaw control as the vehicle passes the next waypoint.",
        "formula": "G(W → X(Y))",
        "explanation": "This formula states that globally (G), when the vehicle passes a waypoint (W), in the next moment (X), the autopilot attempts to retake yaw control (Y). The 'next' operator captures the immediate attempt to regain control after passing a waypoint."
        },
        {
        "sentence": "Missions can be entered, amended through the Mission Planner's Flight Plan screen.",
        "formula": "G(PS → A)",
        "explanation": "This formula indicates that globally (G), it's always eventually possible (F) to either enter (E) missions by PS. The 'finally' operator within the 'globally' operator captures the continuous ability to modify missions."
        },
        {
        "sentence": "Missions should normally have an RTL as their final command to ensure the copter will return after the mission completes.",
        "formula": "G(M → F(R))",
        "explanation": "This formula states that globally (G), if a mission is defined (M), then eventually (F) there should be a Return to Launch command (R). The 'finally' operator captures the expectation of RTL at the end of the mission."
        },
        {
        "sentence": "Alternatively the final command could be a LAND with a different location.",
        "formula": "G(M → F(R ∨ L))",
        "explanation": "This formula extends the previous one, indicating that globally (G), if a mission is defined (M), then eventually (F) there should be either a Return to Launch (R) or a Land command (L). The disjunction (∨) captures the alternative options for the final command."
        },
        {
        "sentence": "Without a final RTL or LAND command the copter will simply stop at the final waypoint and the pilot will need to retake control with the transmitter.",
        "formula": "G((M ∧ ¬(F(R ∨ L))) → F(S ∧ P))",
        "explanation": "This formula states that globally (G), if a mission (M) doesn't eventually have an RTL or LAND command (¬(F(R ∨ L))), then eventually (F) the copter will stop (S) and the pilot will need to take control (P)."
        },
        {
        "sentence": "Remember that when using RTL, the copter will return to the \"home\" position which is the location where the copter was armed.",
        "formula": "G(R → F(H))",
        "explanation": "This formula indicates that globally (G), if RTL is activated (R), then eventually (F) the copter will reach the home position (H). The 'finally' operator captures the eventual return to the home position."
        },
        {
        "sentence": "As the copter touches down at the end of the mission the vehicle should automatically disarm but occasionally the vehicle may not sense the landing and the pilot may need to hold the throttle down and takeoff in another mode like Stabilize or Loiter and then manually disarm the vehicle.",
        "formula": "G(T → (F(D) ∨ F(M ∧ X(D))))",
        "explanation": "This formula states that globally (G), when the copter touches down (T), it should eventually (F) disarm (D), or if it doesn't, eventually (F) manual intervention (M) will be needed, followed by (X) disarming (D). The disjunction (∨) captures the two possible scenarios."
        },
        {
        "sentence": "The maximum horizontal speed of the copter can be adjusted with the Speed (:ref:WPNAV_SPEED<WPNAV_SPEED>) parameter from the Mission Planner's Config/Tuning >> Copter Pids screen (see blue box above).",
        "formula": "G(S → SC)",
        "explanation": "This formula indicates that globally (G), it's always eventually possible to adjust the speed parameter (S) to change speed(CS). The 'finally' operator within the 'globally' operator captures the continuous ability to modify the speed setting."
        },
        {
        "sentence": "A typical copter can reach top speeds of 10m/s ~ 13m/s (i.e. 1000 ~ 1300) before it becomes unable to both maintain altitude and horizontal speed.",
        "formula": "G(T → ¬(A ∧ H))",
        "explanation": "This formula states that globally (G), if the speed reaches a threshold (T), then it's not possible to maintain both altitude (A) and horizontal speed (H). The implication captures the performance limitation at high speeds."
        },
        {
        "sentence": "The Radius (:ref:WPNAV_RADIUS<WPNAV_RADIUS> allows you to control how close the copter must come to the exact waypoint position before the waypoint is considered \"complete\" and the copter moves onto the next waypoint.",
        "formula": "G(R → C)",
        "explanation": "This formula indicates that globally (G), it's always possible to adjust the radius parameter (R), and when a specific radius is set (R), it eventually (F) determines when a waypoint is considered complete (C)."
        },
        {
        "sentence": "This only applies when the waypoint command includes a delay of 1 second or more.",
        "formula": "G((W ∧ D) → R)",
        "explanation": "This formula extends the previous one, stating that globally (G), for waypoints (W) with a delay (D), the radius setting (R) determines when the waypoint is considered complete. The nested implications capture the conditional nature of this rule."
        },
        {
        "sentence": "Without a delay the waypoint is considered a \"fast waypoint\" and the copter will begin towards the next waypoint once the intermediate target that it is chasing has reached the waypoint (S-Curve behavior only applies to \"fast\" waypoints).",
        "formula": "G((W ∧ ¬D) → (I → X(N)))",
        "explanation": "This formula states that globally (G), for waypoints without a delay (W ∧ ¬D), when the intermediate target is reached (I), in the next moment (X) the copter moves to the next waypoint (N). The 'next' operator captures the immediate transition to the next waypoint for fast waypoints."
        }
]