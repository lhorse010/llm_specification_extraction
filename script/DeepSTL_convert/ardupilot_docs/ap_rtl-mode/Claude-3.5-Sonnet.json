{
    "temporal_logic_formulars": [
        {
            "section-id": 1,
            "sentence-id": 1,
            "sentence": "The copter will first rise a minimum of RTL_CLIMB_MIN or to RTL_ALT, whichever is higher, before returning home.",
            "tl": "always ( copterinimumRTL_CLIMB_MIN == RTL_ALTwhichever or retur == returninghome )"
        },
        {
            "section-id": 1,
            "sentence-id": 3,
            "sentence": "Under no circumstances will this altitude be below 2m.",
            "tl": "always ( Undercirucmstances == alatitude < 2 m )"
        },
        {
            "section-id": 1,
            "sentence-id": 4,
            "sentence": "The altitude reference frame is set by either the rally point, if proceeding to one of those, or by RTL_ALT_TYPE to select relative to HOME, or Terrain.",
            "tl": "always ( altituderefere == eceframebyeithralr ) or procedin == onethose ) -> byRTL_TL_TYPE == selelectreHOME or eHraire == eHOTraierain )"
        },
        {
            "section-id": 1,
            "sentence-id": 5,
            "sentence": "If WPNAV_RFND_USE = 1 and Terrain is selected, then rangefinder will be used.",
            "tl": "always ( WPNAV_RFND_USE1 and Terrainsele == lected -> rangefinder == derused )"
        },
        {
            "section-id": 1,
            "sentence-id": 6,
            "sentence": "If RTL is entered close to its return point, the altitude Copter climbs to may be limited to avoid unneeded climbs and descents.",
            "tl": "always ( rise ( RTLclose == itsreturetiCp ) and aylieclimbs == maylilimtedavoidu )"
        },
        {
            "section-id": 1,
            "sentence-id": 15,
            "sentence": "RTL mode requires a reliable position estimate to work properly, most commonly provided by GPS and compass.",
            "tl": "always ( eRTreqiresare == liablitionestimate )"
        },
        {
            "section-id": 3,
            "sentence-id": 0,
            "sentence": "1.RTL_ALT: The minimum altitude the copter will move to before returning to launch.",
            "tl": "always ( RTL_ALT == minimualtitiu == ecoptecoptermove -> erturnin == returIrnglaunch )"
        },
        {
            "section-id": 3,
            "sentence-id": 1,
            "sentence": "Set to zero to return at the current altitude.",
            "tl": "always ( Set == zerteturntaltitude )"
        },
        {
            "section-id": 3,
            "sentence-id": 2,
            "sentence": "The return altitude can be set from 1 to 8000 centimeters.",
            "tl": "always ( returnaltitudecan == 1800 c0centimeteters )"
        },
        {
            "section-id": 3,
            "sentence-id": 4,
            "sentence": "2.RTL_ALT_FINAL: The altitude the copter will move to at the final stage of \"Returning to Launch\" or after completing a Mission.",
            "tl": "always ( RTL_ALT_FINAL == altituecopermove == finalstageturne or gLaurning == Laurncomletun )"
        },
        {
            "section-id": 3,
            "sentence-id": 5,
            "sentence": "Set to zero to automatically land the copter.",
            "tl": "always ( Set == zeroatomatical )"
        },
        {
            "section-id": 3,
            "sentence-id": 6,
            "sentence": "The final return altitude may be adjusted from 0 to 1000 centimeters.",
            "tl": "always ( finalreturnalti == tudemayadjusted0 = 1000 centim )"
        },
        {
            "section-id": 3,
            "sentence-id": 7,
            "sentence": "3.RTL_LOIT_TIME: Time in milliseconds to hover/pause above the \"Home\" position before beginning final descent.",
            "tl": "always ( RTL_LOIT_TIME == mililiseconds = hoverpause -> Homeposition == finfialdescenscent )"
        },
        {
            "section-id": 3,
            "sentence-id": 8,
            "sentence": "The \"Loiter\" time may be adjusted from 0 to 60,000 milliseconds.",
            "tl": "always [ 0 : 600 ] ( Loitermay == adjusted0600 )"
        },
        {
            "section-id": 3,
            "sentence-id": 9,
            "sentence": "4.WP_YAW_BEHAVIOR: Sets how the autopilot controls the \"Yaw\" during Missions and RTL.",
            "tl": "always ( eWP_YAW_BEHAVIOR == Setshowautopilotco == trolntrolsYaws and aw == Misisosions )"
        },
        {
            "section-id": 3,
            "sentence-id": 10,
            "sentence": "0 = Never change Yaw.",
            "tl": "always ( rise ( 00 NeverY == aw ) )"
        },
        {
            "section-id": 3,
            "sentence-id": 11,
            "sentence": "1 = Face Next Waypoint including facing home during RTL.",
            "tl": "always ( F1aceNextWaypointin == incldgfacingh )"
        },
        {
            "section-id": 3,
            "sentence-id": 12,
            "sentence": "2 = Face Next Waypoint except for RTL (i.e. during RTL vehicle will remain pointed at its last heading)",
            "tl": "always ( F2aceNextWaypointe == intexceptRTLie . RTLvehicle == poiteditseditseditshedit )"
        },
        {
            "section-id": 3,
            "sentence-id": 13,
            "sentence": "5.LAND_SPEED: The descent speed for the final stage of landing in centimeters per second.",
            "tl": "always ( deAND_SPEED == descentsped -> finalstagedng == centietmetrsersepersecond )"
        },
        {
            "section-id": 3,
            "sentence-id": 14,
            "sentence": "The landing speed is adjustable from 20 to 200 centimeters per second.",
            "tl": "always ( landingspeedad == justableda = 2020 cetimetete )"
        },
        {
            "section-id": 3,
            "sentence-id": 15,
            "sentence": "6.RTL_CLIMB_MIN: The vehicle will climb at least this many meters at the first stage of the RTL.",
            "tl": "always ( R6RTL_CLIMB_MIN == vehicleclimb >= manymeters )"
        },
        {
            "section-id": 3,
            "sentence-id": 17,
            "sentence": "7.RTL_SPEED: The horizontal speed (in cm/s) at which the vehicle will return to home.",
            "tl": "always ( hoL_SPEED == horizontalsped > cmsed < cmse )"
        },
        {
            "section-id": 3,
            "sentence-id": 19,
            "sentence": "8.RTL_CONE_SLOPE: Defines the slope of an inverted cone above home which is used to limit the amount the vehicle climbs when RTL-ing from close to home.",
            "tl": "always ( RTL_CONE_SLOPE == Definesloeanednertedned == homedcoed -> limetamoused == imtamountvehicleclmbsRTLin )"
        },
        {
            "section-id": 4,
            "sentence-id": 1,
            "sentence": "2.To use RTL, GPS lock needs to be achieved (Blue GPS LED and Blue APM LED on solid not blinking) before arming and takeoff to establish the home or launch position.",
            "tl": "always ( TouseRTLGPSlock == achieved and not ( BlueAPMLEDsolid == blingarm ) and tkeof == estalglahlgishofshoesof )"
        },
        {
            "section-id": 4,
            "sentence-id": 4,
            "sentence": "5.If you set the RTL_ALT to a number at other than 0 it will go to and maintain that altitude while returning.",
            "tl": "always ( youRTL_ALT == anumberother0it and rise ( maintaltina == ltitudetureturetn ) )"
        },
        {
            "section-id": 4,
            "sentence-id": 5,
            "sentence": "6.RTL uses WPNAV_SPEED to determine how fast it travels.",
            "tl": "always [ 0 : 6 . RTLusesWPNAV_SED == determinehowfastittravels )"
        },
        {
            "section-id": 4,
            "sentence-id": 6,
            "sentence": "7.Once the copter arrives at the home location the copter will pause for RTL_LOIT_TIME milliseconds, timeout (AUTO_LAND), then land.",
            "tl": "always ( ( Oncecopterarives == homeocaterpause ) until ( ORTL_LOIT_TIME == lisecolicol ) -> ( codsecotAUOi_L == tAUO_LND ) )"
        },
        {
            "section-id": 1,
            "sentence-id": 14,
            "sentence": "Again, 2m is the minimum return altitude.",
            "tl": "always ( Again2minmimuretu == rnaltitude )"
        },
        {
            "section-id": 1,
            "sentence-id": 18,
            "sentence": "RTL will command the copter to return to the home position, meaning that it will return to the location where it was armed.",
            "tl": "always ( RTLcommandcotrer == reomepositionmeaneitn == locaitrneiturn and locatitrn == locatioioioneionwheitunwheit )"
        },
        {
            "section-id": 1,
            "sentence-id": 0,
            "sentence": "When RTL mode is selected, the copter will return to the home location, or if rally points have been setup, the closet rally point.",
            "tl": "always ( RTLselected == coptererturn or rn == holylpointsetupet )"
        }
    ]
}