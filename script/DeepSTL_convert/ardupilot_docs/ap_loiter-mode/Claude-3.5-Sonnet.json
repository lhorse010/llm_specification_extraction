{
    "temporal_logic_formulars": [
        {
            "section-id": 0,
            "sentence-id": 0,
            "sentence": "Loiter Mode automatically attempts to maintain the current location, heading and altitude.",
            "tl": "always ( LoiterModeautmatm == icalyatempts )"
        },
        {
            "section-id": 1,
            "sentence-id": 5,
            "sentence": "The vehicle can be armed in Loiter mode but only once the GPS has 3D lock and the HDOP has dropped below 1.4.",
            "tl": "always ( vehiclecanarmed == LoiterbutonlyGPS3Dlock and rise ( HDOP < 1.4 ) )"
        },
        {
            "section-id": 3,
            "sentence-id": 0,
            "sentence": "1.LOIT_SPEED: max horizontal speed in cm/s (i.e. 1250 = 12.5m/s)",
            "tl": "always ( mxLOIT_SPEED == maxorizontalsped == cmsicmse and ( iesie > 1.1250 . 1 and eicmsiesi < 12.5012 . 5 ) )"
        },
        {
            "section-id": 3,
            "sentence-id": 1,
            "sentence": "2.LOIT_ACC_MAX: max acceleration in cm/s/s.",
            "tl": "always ( mxaceleration == cmsss )"
        },
        {
            "section-id": 3,
            "sentence-id": 2,
            "sentence": "Higher values cause the copter to accelerate and stop more quickly",
            "tl": "always ( Highervaluescausecosec == acecopr ) and stocepquickl == licklylyy )"
        },
        {
            "section-id": 3,
            "sentence-id": 3,
            "sentence": "3.LOIT_ANG_MAX: max lean angle in degrees (i.e. 30deg).",
            "tl": "always ( maxleanangle == degreesi . 30 and degresie < 0.30 ) -> edeg > esi > 1.3 and edesieg < 0.3 )"
        },
        {
            "section-id": 3,
            "sentence-id": 4,
            "sentence": "By default this value is zero which causes the PSC_ANGLE_MAX or ANGLE_MAX parameter's value to be used",
            "tl": "always ( zerfause == zerocauseSC_ANGLE_MAX or not ( ANGLE_MAX == NGLE_MAaXamprededmders ) )"
        },
        {
            "section-id": 3,
            "sentence-id": 5,
            "sentence": "4.LOIT_BRK_ACCEL: max acceleration in cm/s/s while braking (i.e. pilot has moved sticks to center).",
            "tl": "always ( LOIT_BRK_ACCEL == maxaceleration == cmsbrakingi ) and ( epilomlovedstmovedsticks == cedsticksene )"
        },
        {
            "section-id": 3,
            "sentence-id": 6,
            "sentence": "Higher values will stop the vehicle more quickly",
            "tl": "always ( Highervaluesst == pvehiclequickly )"
        },
        {
            "section-id": 3,
            "sentence-id": 7,
            "sentence": "5.LOIT_BRK_DELAY: the delay in seconds before braking starts once the pilot has centered the sticks",
            "tl": "always ( L5OIT_BRK_DELAY == secondsbraking == pilotcedsterednteredst == tedstckstedcks )"
        },
        {
            "section-id": 3,
            "sentence-id": 8,
            "sentence": "6.LOIT_BRK_JERK: max change in acceleration in cm/s/s/s while braking.",
            "tl": "always ( mx == acelerationcmssbraking )"
        },
        {
            "section-id": 3,
            "sentence-id": 9,
            "sentence": "Higher numbers will make the vehicle reach the maximum braking angle more quickly, lower numbers will cause smoother braking",
            "tl": "always ( Highernumbers == meraxeamSkgl ) or rkglequickly < numbers == sesmoterbrsmoterbrkmoherbr )"
        },
        {
            "section-id": 3,
            "sentence-id": 10,
            "sentence": "7.PSC_POSXY_P: (shown as \"Position XY (Dist to Speed)\" at the top right of the screen shot above) converts the horizontal position error (i.e difference between the desired position and the actual position) to a desired speed towards the target position.",
            "tl": "always ( sSC_POSXY_iteSsoi == shoinitiosioS and ( stSpednDistSped < topenstSpe ) -> ( tconertinero == ierorodedecedepesindasiepoi = sitiasoiciedKdsoi ) and ( aso == sicatricasiededritriedKdsoicasisoitri"
        },
        {
            "section-id": 3,
            "sentence-id": 12,
            "sentence": "8.PSC_VELXY_P (shown as \"Velocity XY (Vel to Accel)\") converts the desired speed towards the target to a desired acceleration.",
            "tl": "always ( PSC_VELXY_P > 4 shownlVeocityYe < Acel -> ( convedsedspedtredtared == desiacerelrdaceredacelrgtiaretio == adereloiacelion )"
        },
        {
            "section-id": 3,
            "sentence-id": 13,
            "sentence": "The resulting desired acceleration becomes a lean angle which is then passed to the same angular controller used by Stabilize mode.",
            "tl": "always ( rise ( resultingdesier == daceracele ) -> pased == angularcontrolerulerused == dbyStabililize )"
        },
        {
            "section-id": 0,
            "sentence-id": 2,
            "sentence": "A good GPS lock, low magnetic interference on the compass and low vibrations are all important in achieving good loiter performance.",
            "tl": "always ( AgodGPSlocklowm == agetinerfecerncoec == s and lowvibrationsim == simponsimponsatat )"
        }
    ]
}