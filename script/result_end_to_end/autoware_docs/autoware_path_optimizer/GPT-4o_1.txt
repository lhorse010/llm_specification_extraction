```json
{
    "specifications": [
        {
            "formula": "G (¬outside_drivable_area → trajectory_inside_drivable_area)",
            "explanation": "Globally, if the trajectory is not outside the drivable area, then it should remain inside."
        },
        {
            "formula": "G (ego_moving_dist > 3.0 → X replan)",
            "explanation": "If the ego moves longer than 3 meters in one cycle, replan the trajectory in the next cycle."
        },
        {
            "formula": "G (goal_moving_dist > 15.0 → X replan)",
            "explanation": "If the goal pose moves longer than 15 ms in one cycle, replan the trajectory in the next cycle."
        },
        {
            "formula": "G (time_passed > 1.0 → X skip_optimization)",
            "explanation": "If more than 1 second passes, skip the optimization for a while due to computation cost."
        },
        {
            "formula": "G (input_path_change > 2.0 → X replan)",
            "explanation": "If the input path changes laterally more than 2 meters, replan the trajectory in the next cycle."
        },
        {
            "formula": "G F (trajectory_kinematically_feasible ∧ collision_free)",
            "explanation": "Eventually, the trajectory must be kinematically feasible and collision-free."
        },
        {
            "formula": "G (trajectory_length <= 50 → optimization_applied)",
            "explanation": "If the trajectory length is 50 meters or less, apply optimization."
        },
        {
            "formula": "G (¬optimized_trajectory_outside_drivable_area → insert_zero_velocity)",
            "explanation": "If the optimized trajectory goes outside the drivable area, insert zero velocity."
        }
    ]
}
```