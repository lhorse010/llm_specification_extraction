[
  {
    "index": 0,
    "formula": "G(inside_drivable_area)",
    "explanation": "The vehicle should always be inside the drivable area."
  },
  {
    "index": 1,
    "formula": "G(velocity = 0 -> outside_drivable_area)",
    "explanation": "If the vehicle is outside the drivable area, its velocity should be zero."
  },
  {
    "index": 2,
    "formula": "G(distance_to_road_boundary > mpt.clearance.soft_clearance_from_road)",
    "explanation": "The vehicle should maintain a safe distance from the road boundary."
  },
  {
    "index": 3,
    "formula": "G(steering_wheel_stability)",
    "explanation": "The steering wheel should be stable along the trajectory."
  },
  {
    "index": 4,
    "formula": "F(optimization_failure -> previously_generated_trajectory)",
    "explanation": "If optimization fails, the previously generated trajectory should be used."
  },
  {
    "index": 5,
    "formula": "G(computation_time < max_computation_time)",
    "explanation": "The computation time should be within the maximum allowed time."
  },
  {
    "index": 6,
    "formula": "G(trajectory_length > min_trajectory_length)",
    "explanation": "The trajectory length should be greater than the minimum required length."
  },
  {
    "index": 7,
    "formula": "G(ego_moving_dist < replan.max_ego_moving_dist)",
    "explanation": "The ego vehicle should not move more than the maximum allowed distance in one cycle."
  },
  {
    "index": 8,
    "formula": "G(goal_moving_dist < replan.max_goal_moving_dist)",
    "explanation": "The goal pose should not move more than the maximum allowed distance in one cycle."
  },
  {
    "index": 9,
    "formula": "G(time_passes -> optimization_executed)",
    "explanation": "Optimization should be executed at regular time intervals."
  },
  {
    "index": 10,
    "formula": "G(input_path_change -> optimization_executed)",
    "explanation": "Optimization should be executed when the input path changes."
  }
]