[
  {
    "index": 0,
    "formula": "G(return_mode → (global_position ∧ home_position_set))",
    "explanation": "Globally, if the vehicle is in return mode, it must have a global position estimate and a home position set."
  },
  {
    "index": 1,
    "formula": "G(return_mode → ¬can_arm)",
    "explanation": "Globally, when in return mode, the vehicle cannot be armed. It must be armed before entering this mode."
  },
  {
    "index": 2,
    "formula": "G(return_mode ∧ position_lost → F(failsafe))",
    "explanation": "Globally, if the vehicle is in return mode and loses its position estimate, it will eventually enter failsafe mode."
  },
  {
    "index": 3,
    "formula": "G(return_mode → F(altitude ≥ min(RTL_RETURN_ALT, initial_altitude)))",
    "explanation": "Globally, when in return mode, the vehicle will eventually reach an altitude that is at least the minimum of RTL_RETURN_ALT and its initial altitude."
  },
  {
    "index": 4,
    "formula": "G(return_mode → F(at_safe_landing_point ∧ X(altitude = RTL_DESCEND_ALT)))",
    "explanation": "Globally, when in return mode, the vehicle will eventually reach a safe landing point, and in the next state, it will be at the RTL_DESCEND_ALT altitude."
  },
  {
    "index": 5,
    "formula": "G(at_safe_landing_point → F[0,RTL_LAND_DELAY](landing))",
    "explanation": "Globally, when the vehicle is at a safe landing point, it will eventually land within RTL_LAND_DELAY time units."
  },
  {
    "index": 6,
    "formula": "G(return_mode ∧ rc_stick_movement → X(position_mode) ∨ critical_battery)",
    "explanation": "Globally, when in return mode, if there's RC stick movement, the vehicle will switch to position mode in the next state, unless there's a critical battery situation."
  },
  {
    "index": 7,
    "formula": "G(return_mode ∧ (distance_to_destination ≤ max_cone_radius) → altitude ≥ max(RTL_DESCEND_ALT, cone_intersection))",
    "explanation": "Globally, when in return mode and within the maximum cone radius of the destination, the altitude must be at least the maximum of RTL_DESCEND_ALT and the cone intersection altitude."
  }
]