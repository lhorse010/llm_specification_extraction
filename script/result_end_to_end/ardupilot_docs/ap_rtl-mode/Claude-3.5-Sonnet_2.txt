I'll extract the specifications from the document and express them using Metric Temporal Logic (MTL) formulas. Then, I'll format the converted sentences in JSON as requested.

```json
{
    "specifications": [
        {
            "formula": "G(RTL_mode → F[0,∞](altitude ≥ max(RTL_CLIMB_MIN, RTL_ALT, 2)))",
            "explanation": "Globally, when RTL mode is activated, eventually the copter will reach an altitude that is at least the maximum of RTL_CLIMB_MIN, RTL_ALT, and 2 meters."
        },
        {
            "formula": "G(RTL_mode ∧ (distance_to_home * RTL_CONE_SLOPE < max(RTL_CLIMB_MIN, RTL_ALT, 2)) → F[0,∞](altitude ≤ distance_to_home * RTL_CONE_SLOPE))",
            "explanation": "Globally, when RTL mode is activated and the copter is close to home (determined by RTL_CONE_SLOPE), the maximum altitude will be limited by the distance from the return point multiplied by RTL_CONE_SLOPE."
        },
        {
            "formula": "G(RTL_mode → F[0,∞](position = home_position))",
            "explanation": "Globally, when RTL mode is activated, eventually the copter will return to the home position."
        },
        {
            "formula": "G(RTL_mode ∧ (altitude = home_altitude) → X(hover_time = RTL_LOIT_TIME))",
            "explanation": "Globally, when RTL mode is active and the copter reaches home altitude, in the next state it will hover for RTL_LOIT_TIME milliseconds."
        },
        {
            "formula": "G(RTL_mode ∧ (altitude > RTL_ALT_FINAL) → F[0,∞](altitude = RTL_ALT_FINAL))",
            "explanation": "Globally, when RTL mode is active and the current altitude is higher than RTL_ALT_FINAL, eventually the copter will descend to RTL_ALT_FINAL."
        },
        {
            "formula": "G(RTL_mode ∧ (RTL_ALT_FINAL = 0) → F[0,∞](landed))",
            "explanation": "Globally, when RTL mode is active and RTL_ALT_FINAL is set to 0, eventually the copter will land."
        },
        {
            "formula": "G(RTL_mode → horizontal_speed ≤ max(RTL_SPEED, WPNAV_SPEED))",
            "explanation": "Globally, when RTL mode is active, the horizontal speed of the copter will be at most the maximum of RTL_SPEED and WPNAV_SPEED."
        },
        {
            "formula": "G(landing → vertical_speed = LAND_SPEED)",
            "explanation": "Globally, during the landing phase, the vertical speed of the copter will be equal to LAND_SPEED."
        },
        {
            "formula": "G(RTL_mode → GPS_lock)",
            "explanation": "Globally, RTL mode requires a GPS lock to be active."
        }
    ]
}
```

These MTL formulas capture the key specifications for the RTL (Return To Launch) mode of the copter as described in the document. They cover aspects such as altitude requirements, return behavior, hover time, landing conditions, speed limitations, and GPS lock requirement. The formulas use the temporal operators G (globally) and F (finally) to express the temporal aspects of the specifications.