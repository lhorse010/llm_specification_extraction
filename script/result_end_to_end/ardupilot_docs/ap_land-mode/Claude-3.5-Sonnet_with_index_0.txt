[
  {
    "index": 0,
    "formula": "G(altitude > 10 → X(descent_speed = WPNAV_SPEED_DN))",
    "explanation": "Globally, if the altitude is greater than 10m, in the next state the descent speed should be equal to WPNAV_SPEED_DN."
  },
  {
    "index": 1,
    "formula": "G(altitude ≤ 10 → X(descent_speed = LAND_SPEED))",
    "explanation": "Globally, if the altitude is less than or equal to 10m, in the next state the descent speed should be equal to LAND_SPEED (which defaults to 50cm/s)."
  },
  {
    "index": 2,
    "formula": "G((on_ground ∧ pilot_throttle_min) → F(motors_off ∧ disarmed))",
    "explanation": "Globally, if the copter is on the ground and the pilot's throttle is at minimum, eventually the motors will be off and the copter will be disarmed."
  },
  {
    "index": 3,
    "formula": "G(GPS_lock → horizontal_control = loiter_mode)",
    "explanation": "Globally, if GPS lock is available, the horizontal control will be in loiter mode."
  },
  {
    "index": 4,
    "formula": "G(¬GPS_lock → horizontal_control = stabilize_mode)",
    "explanation": "Globally, if GPS lock is not available, the horizontal control will be in stabilize mode."
  },
  {
    "index": 5,
    "formula": "G((motors_low_level ∧ -20 ≤ climb_rate ≤ 20 ∧ ¬accelerating) U[0,1] landed)",
    "explanation": "Globally, the copter is considered landed if motors are at low level, climb rate is between -20cm/s and +20cm/s, and it's not accelerating for 1 second."
  },
  {
    "index": 6,
    "formula": "G(landed → (altitude < 10 ∨ (using_rangefinder ∧ altitude < 2)))",
    "explanation": "Globally, for the copter to be considered landed, it must be below 10m above home altitude, or within 2m of the ground if using a rangefinder."
  },
  {
    "index": 7,
    "formula": "G(LGR_WOW_PIN_enabled → (descent_rate_limit_increased ∧ accelerometer_range_increased))",
    "explanation": "Globally, if the Weight on Wheels (WoW) switch is enabled, the acceptable descent rate and accelerometer ranges for landing detection are increased."
  }
]