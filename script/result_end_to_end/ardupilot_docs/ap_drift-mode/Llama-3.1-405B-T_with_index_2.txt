[
  {
    "index": 0,
    "formula": "G((right_stick_forward → X(pitch_up)) ∧ (right_stick_backward → X(pitch_down)))",
    "explanation": "When the right stick is pushed forward or backward, the copter will pitch up or down accordingly."
  },
  {
    "index": 1,
    "formula": "G((right_stick_left → X(turn_left)) ∧ (right_stick_right → X(turn_right)))",
    "explanation": "When the right stick is pushed to the left or right, the copter will turn in the corresponding direction."
  },
  {
    "index": 2,
    "formula": "G(turning → X(banking))",
    "explanation": "When the copter is turning, it will also bank to make a coordinated turn."
  },
  {
    "index": 3,
    "formula": "G((yaw_applied ∧ roll_applied) → X(coordinated_turn))",
    "explanation": "When yaw and roll are applied, the copter will make a coordinated turn."
  },
  {
    "index": 4,
    "formula": "G(sticks_released → X(speed_brake))",
    "explanation": "When the sticks are released, the copter will slow down to a stop over a two-second period."
  },
  {
    "index": 5,
    "formula": "G(right_stick_center → X(loosely_hold_horizontal_position))",
    "explanation": "When the right stick is in the center, the copter will loosely hold its horizontal position."
  },
  {
    "index": 6,
    "formula": "G(throttle_input → X(average_motor_speed))",
    "explanation": "The pilot's throttle input controls the average motor speed."
  },
  {
    "index": 7,
    "formula": "G(throttle_down → X(motors_minimum_rate))",
    "explanation": "When the throttle is completely down, the motors will go to their minimum rate."
  },
  {
    "index": 8,
    "formula": "G(GPS_signal_lost → X(land_or_altitude_hold))",
    "explanation": "If the GPS signal is lost, the copter will either land or enter altitude hold based on the failsafe_gps_enabled setting."
  }
]