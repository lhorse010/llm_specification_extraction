[
  {
    "sentence": "In altitude hold mode, Copter maintains a consistent altitude while allowing roll, pitch, and yaw to be controlled normally.",
    "formula": "G(AHM → (C ∧ (R ∨ P ∨ Y)))",
    "explanation": "Here, AHM represents the altitude hold mode, C represents the consistent altitude, and R, P, and Y represent the roll, pitch, and yaw, respectively. The formula states that in altitude hold mode, the copter maintains a consistent altitude and allows roll, pitch, and yaw to be controlled normally."
  },
  {
    "sentence": "When altitude hold mode (aka AltHold) is selected, the throttle is automatically controlled to maintain the current altitude.",
    "formula": "G(AHM → T)",
    "explanation": "Here, AHM represents the altitude hold mode, and T represents the throttle being automatically controlled. The formula states that when altitude hold mode is selected, the throttle is automatically controlled to maintain the current altitude."
  },
  {
    "sentence": "Roll, Pitch and yaw operate the same as in Stabilize mode meaning that the pilot directly controls the roll and pitch lean angles and the heading.",
    "formula": "G(SM → (R ∧ P ∧ Y))",
    "explanation": "Here, SM represents the stabilize mode, and R, P, and Y represent the roll, pitch, and yaw, respectively. The formula states that in stabilize mode, the pilot directly controls the roll and pitch lean angles and the heading."
  },
  {
    "sentence": "The autopilot uses a barometer which measures air pressure as the primary means for determining altitude (\"Pressure Altitude\") and if the air pressure is changing in your flight area due to extreme weather, the copter will follow the air pressure change rather than actual altitude.",
    "formula": "G(B → (P → A))",
    "explanation": "Here, B represents the barometer, P represents the air pressure, and A represents the altitude. The formula states that if the air pressure is changing, the copter will follow the air pressure change rather than the actual altitude."
  },
  {
    "sentence": "When fitted and enabled, a downward facing rangefinder such as LiDAR or SONAR will automatically provide even more accurate  altitude maintenance, up to the limit of the sensor.",
    "formula": "G((L ∨ S) → A)",
    "explanation": "Here, L represents the LiDAR, S represents the SONAR, and A represents the accurate altitude maintenance. The formula states that when fitted and enabled, the LiDAR or SONAR will automatically provide accurate altitude maintenance."
  },
  {
    "sentence": "The pilot can control the climb or descent rate of the vehicle with the throttle stick.",
    "formula": "G(TS → (C ∨ D))",
    "explanation": "Here, TS represents the throttle stick, C represents the climb rate, and D represents the descent rate. The formula states that the pilot can control the climb or descent rate of the vehicle with the throttle stick."
  },
  {
    "sentence": "1.If the throttle stick is in the middle (40% ~ 60%) the vehicle will maintain the current altitude.",
    "formula": "G((TS ≥ 0.4) ∧ (TS ≤ 0.6) → A)",
    "explanation": "Here, TS represents the throttle stick, and A represents the current altitude. The formula states that if the throttle stick is in the middle, the vehicle will maintain the current altitude."
  },
  {
    "sentence": "2.Outside of the mid-throttle deadzone (i.e. below 40% or above 60%) the vehicle will descend or climb depending upon the deflection of the stick.",
    "formula": "G(((TS < 0.4) ∨ (TS > 0.6)) → (D ∨ C))",
    "explanation": "Here, TS represents the throttle stick, D represents the descent, and C represents the climb. The formula states that outside of the mid-throttle deadzone, the vehicle will descend or climb depending upon the deflection of the stick."
  },
  {
    "sentence": "When the stick is completely down the copter will descend at 2.5m/s and if at the very top it will climb by 2.5m/s.",
    "formula": "G((TS = 0) → D) ∧ G((TS = 1) → C)",
    "explanation": "Here, TS represents the throttle stick, D represents the descent at 2.5m/s, and C represents the climb at 2.5m/s. The formula states that when the stick is completely down, the copter will descend at 2.5m/s, and if at the very top, it will climb by 2.5m/s."
  },
  {
    "sentence": "These speeds can be adjusted with the PILOT_SPEED_UP and PILOT_SPEED_DN parameters.",
    "formula": "G((PSU ∧ PSD) → (C ∨ D))",
    "explanation": "Here, PSU represents the PILOT_SPEED_UP parameter, PSD represents the PILOT_SPEED_DN parameter, C represents the climb speed, and D represents the descent speed. The formula states that these speeds can be adjusted with the PILOT_SPEED_UP and PILOT_SPEED_DN parameters."
  },
  {
    "sentence": "The acceleration used to establish these speeds is set by PILOT_ACCEL_Z.",
    "formula": "G(P)",
    "explanation": "Here, P represents the acceleration being set by PILOT_ACCEL_Z. The globally operator (G) ensures that this condition holds true at all times."
  },
  {
    "sentence": "The size of the deadband can be adjusted with the THR_DZ parameter.",
    "formula": "F(D ∨ ¬D)",
    "explanation": "Here, D represents the deadband size being adjusted. The finally operator (F) ensures that the deadband size can be adjusted at some point in the future. The disjunction (∨) with the negation of D (¬D) allows for the deadband size to be either adjusted or not adjusted."
  },
  {
    "sentence": "This param's value should be between \"0\" and \"400\" with \"0\" meaning no deadband.",
    "formula": "G(V ≥ 0 ∧ V ≤ 400)",
    "explanation": "Here, V represents the parameter value. The globally operator (G) ensures that the value is always within the specified range. The conjunction (∧) ensures that both conditions (V ≥ 0 and V ≤ 400) are met."
  },
  {
    "sentence": "\"100\" would produce a deadband 10% above and below mid throttle (i.e. deadband extends from 40% to 60% throttle stick position).",
    "formula": "G(D → (T ≥ 0.4 ∧ T ≤ 0.6))",
    "explanation": "Here, D represents the deadband and T represents the throttle stick position. The globally operator (G) ensures that the condition holds true at all times. The implication (→) ensures that if the deadband is set to 100, then the throttle stick position is within the specified range."
  },
  {
    "sentence": "The Altitude Hold P is used to convert the altitude error (the difference between the desired altitude and the actual altitude) to a desired climb or descent rate.",
    "formula": "G(E → R)",
    "explanation": "Here, E represents the altitude error and R represents the desired climb or descent rate. The globally operator (G) ensures that the condition holds true at all times. The implication (→) ensures that if there is an altitude error, then it is converted to a desired climb or descent rate."
  },
  {
    "sentence": "A higher rate will make it more aggressively attempt to maintain it’s altitude but if set too high leads to a jerky throttle response.",
    "formula": "G(R → (A ∨ J))",
    "explanation": "Here, R represents the rate, A represents the aggressive attempt to maintain altitude, and J represents the jerky throttle response. The globally operator (G) ensures that the condition holds true at all times. The implication (→) ensures that if the rate is high, then either the system attempts to maintain altitude aggressively or the throttle response is jerky."
  },
  {
    "sentence": "The Throttle Rate (which normally requires no tuning) converts the desired climb or descent rate into a desired acceleration up or down.",
    "formula": "G(R → A)",
    "explanation": "Here, R represents the throttle rate and A represents the desired acceleration. The globally operator (G) ensures that the condition holds true at all times. The implication (→) ensures that if the throttle rate is set, then it is converted to a desired acceleration."
  },
  {
    "sentence": "The Throttle Accel PID gains convert the acceleration error (i.e the difference between the desired acceleration and the actual acceleration) into a motor output.",
    "formula": "G(E → M)",
    "explanation": "Here, E represents the acceleration error and M represents the motor output. The globally operator (G) ensures that the condition holds true at all times. The implication (→) ensures that if there is an acceleration error, then it is converted to a motor output."
  },
  {
    "sentence": "The 1:2 ratio of P to I (i.e. I is twice the size of P) should be maintained if you modify these parameters.",
    "formula": "G(P → (I = 2P))",
    "explanation": "Here, P represents the proportional gain and I represents the integral gain. The globally operator (G) ensures that the condition holds true at all times. The implication (→) ensures that if the proportional gain is modified, then the integral gain is twice the size of the proportional gain."
  },
  {
    "sentence": "These values should never be increased but for very powerful copters you may get better response by reducing both by 50% (i.e P to 0.5, I to 1.0).",
    "formula": "G((P ≤ 0.5 ∧ I ≤ 1.0) ∨ (P = 0.5 ∧ I = 1.0))",
    "explanation": "Here, P represents the proportional gain and I represents the integral gain. The globally operator (G) ensures that the condition holds true at all times. The disjunction (∨) allows for either the gains to be reduced by 50% or the gains to be set to the specified values."
  },
  {
    "sentence": "Normally this is caused by not having the throttle stick in the mid position.",
    "formula": "G(¬M → A)",
    "explanation": "Here, M represents the throttle stick being in the mid position, and A represents the abnormal behavior. The formula states that globally, if the throttle stick is not in the mid position, then the abnormal behavior occurs."
  },
  {
    "sentence": "See the wiki page related to setting the mid throttle position.",
    "formula": "None",
    "explanation": "This sentence is an instruction and does not contain any temporal or logical information that can be represented in MTL."
  },
  {
    "sentence": "The workaround is to enter AltHold while the copter is flying at a stable altitude.",
    "formula": "G(S → X(A))",
    "explanation": "Here, S represents the copter flying at a stable altitude, and A represents entering AltHold. The formula states that globally, if the copter is flying at a stable altitude, then in the next state, AltHold is entered."
  },
  {
    "sentence": "There is no cure for this behaviour at the moment although increasing the EK2_ALT_M_NSE parameter reduces  the effect but increases the change of Common Problem #1 listed above.",
    "formula": "G(¬C ∧ (E → (R ∧ I)))",
    "explanation": "Here, C represents the cure for the behavior, E represents increasing the EK2_ALT_M_NSE parameter, R represents reducing the effect, and I represents increasing the chance of Common Problem #1. The formula states that globally, there is no cure, and increasing the parameter reduces the effect but increases the chance of the problem."
  },
  {
    "sentence": "The EK2_ALT_M_NSE parameter has a range from 0.1 to 10.0 and allows increments of 0.1.",
    "formula": "G(V ≥ 0.1 ∧ V ≤ 10.0 ∧ (V → X(V + 0.1)))",
    "explanation": "Here, V represents the value of the EK2_ALT_M_NSE parameter. The formula states that globally, the value is within the range [0.1, 10.0], and if the value is V, then in the next state, the value can be incremented by 0.1."
  },
  {
    "sentence": "The solution is to move the autopilot out of the prop wash effect or shield it within an appropriately ventilated enclosure.",
    "formula": "G(P → (M ∨ S))",
    "explanation": "Here, P represents the prop wash effect, M represents moving the autopilot, and S represents shielding it. The formula states that globally, if the prop wash effect occurs, then the autopilot is either moved or shielded."
  },
  {
    "sentence": "It is very important that the vehicle has enough power available.",
    "formula": "G(P)",
    "explanation": "Here, P represents the vehicle having enough power available. The formula states that globally, the vehicle has enough power."
  },
  {
    "sentence": "Without this the AltHold and attitude controllers can require more power than is available from one or more motors and will be forced to sacrifice some control which could lead to a loss of attitude or altitude.",
    "formula": "G(¬P → (R → (S ∨ L)))",
    "explanation": "Here, P represents the vehicle having enough power, R represents the controllers requiring more power, S represents sacrificing control, and L represents losing attitude or altitude. The formula states that globally, if the vehicle does not have enough power, then if the controllers require more power, they will sacrifice control or lose attitude or altitude."
  },
  {
    "sentence": "Ideally the vehicle should be able to hover at about 50% throttle (mid stick) and anything higher than 70% is dangerous.",
    "formula": "G(H → (T ≤ 0.7))",
    "explanation": "Here, H represents the vehicle hovering, and T represents the throttle value. The formula states that globally, if the vehicle is hovering, then the throttle value should be less than or equal to 0.7."
  },
  {
    "sentence": "If you incorporate expo on your transmitter, that directly increases the size of the Alt Hold throttle dead band.",
    "formula": "G(E → I)",
    "explanation": "Here, E represents incorporating expo on the transmitter, and I represents increasing the size of the Alt Hold throttle dead band. The formula states that globally, if expo is incorporated, then the size of the dead band increases."
  }
]