[
  {
    "sentence": "When switched into Smart RTL, like regular RTL, the vehicle will attempt to return home.",
    "formula": "G(SmartRTL → F(ReturnHome))",
    "explanation": "Here, SmartRTL represents the vehicle being switched into Smart RTL mode, and ReturnHome represents the vehicle attempting to return home. The formula states that whenever the vehicle is in Smart RTL mode, it will eventually attempt to return home."
  },
  {
    "sentence": "The buffer is of a limited size (see below) and once it is full, \"SmartRTL deactivated: buffer full\" will appear on the ground stations's HUD and the user will no longer be able to switch into this mode.",
    "formula": "G(BufferFull → (¬SmartRTL ∧ HUDMessage))",
    "explanation": "Here, BufferFull represents the buffer being full, SmartRTL represents the vehicle being in Smart RTL mode, and HUDMessage represents the message appearing on the ground station's HUD. The formula states that whenever the buffer is full, the vehicle will not be in Smart RTL mode and the message will appear on the HUD."
  },
  {
    "sentence": "SmartRTL saves points at a maximum of 3 per second, but only if the vehicle has moved at least SRTL_ACCURACY meters from the previous point.",
    "formula": "G(SmartRTL → (X(SavePoint) ∧ (DistanceMoved ≥ SRTL_ACCURACY)))",
    "explanation": "Here, SmartRTL represents the vehicle being in Smart RTL mode, SavePoint represents the vehicle saving a point, and DistanceMoved represents the distance moved from the previous point. The formula states that whenever the vehicle is in Smart RTL mode, it will save a point at the next time step if it has moved at least SRTL_ACCURACY meters from the previous point."
  },
  {
    "sentence": "After 50 points are saved it goes back and simplifies them into lines again using that SRTL_ACCURACY.",
    "formula": "G(PointsSaved ≥ 50 → F(SimplifyLines))",
    "explanation": "Here, PointsSaved represents the number of points saved, and SimplifyLines represents the vehicle simplifying the points into lines. The formula states that whenever 50 or more points are saved, the vehicle will eventually simplify them into lines."
  },
  {
    "sentence": "The FS_GCS_ENABLE and FS_THR_ENABLE parameters set to 4 or 5 the vehicle will switch to SmartRTL->RTL or SmartRTL->Land based on whether the correct conditions allows the mode.",
    "formula": "G((FS_GCS_ENABLE = 4 ∨ FS_GCS_ENABLE = 5) ∧ (FS_THR_ENABLE = 4 ∨ FS_THR_ENABLE = 5) → (SmartRTL → (RTL ∨ Land)))",
    "explanation": "Here, FS_GCS_ENABLE and FS_THR_ENABLE represent the parameters being set to 4 or 5, SmartRTL represents the vehicle being in Smart RTL mode, RTL represents the vehicle switching to RTL mode, and Land represents the vehicle switching to Land mode. The formula states that whenever the parameters are set to 4 or 5, the vehicle will switch to RTL or Land mode from Smart RTL mode based on the correct conditions."
  },
  {
    "sentence": "The setting indicates that it will try SmartRTL first, then downgrade to RTL (4) or Land (5)",
    "formula": "G(SmartRTL → (F(RTL) ∨ F(Land)))",
    "explanation": "Here, SmartRTL represents the vehicle being in Smart RTL mode, RTL represents the vehicle switching to RTL mode, and Land represents the vehicle switching to Land mode. The formula states that whenever the vehicle is in Smart RTL mode, it will eventually switch to RTL or Land mode."
  },
  {
    "sentence": "The vehicle must have a good position estimate (LEDs should be green) when the vehicle is armed or SmartRTL will be disabled.",
    "formula": "G(Armed → (GoodPositionEstimate → SmartRTL))",
    "explanation": "Here, Armed represents the vehicle being armed, GoodPositionEstimate represents the vehicle having a good position estimate, and SmartRTL represents the vehicle being in Smart RTL mode. The formula states that whenever the vehicle is armed, it must have a good position estimate to be in Smart RTL mode."
  },
  {
    "sentence": "If the vehicle is armed without a good position estimate, \"SmartRTL deactivated: bad position\" will be sent to the ground station.",
    "formula": "G(Armed ∧ ¬GoodPositionEstimate → HUDMessage)",
    "explanation": "Here, Armed represents the vehicle being armed, GoodPositionEstimate represents the vehicle having a good position estimate, and HUDMessage represents the message being sent to the ground station. The formula states that whenever the vehicle is armed without a good position estimate, the message will be sent to the ground station."
  },
  {
    "sentence": "1.RTL_SPEED can be used to set the speed (in meters/second) at which the vehicle will return to home.",
    "formula": "G(RTL_SPEED = x → ReturnSpeed = x)",
    "explanation": "Here, RTL_SPEED represents the speed setting, and ReturnSpeed represents the speed at which the vehicle returns home. The formula states that whenever the speed setting is x, the vehicle will return home at speed x."
  },
  {
    "sentence": "2.RTL_ALT_FINAL if set to 0, will land at home, otherwise will stop and hover above home at this altitude upon completion of the return.",
    "formula": "G(RTL_ALT_FINAL = 0 → LandAtHome) ∧ G(RTL_ALT_FINAL ≠ 0 → HoverAboveHome)",
    "explanation": "Here, RTL_ALT_FINAL represents the altitude setting, LandAtHome represents the vehicle landing at home, and HoverAboveHome represents the vehicle hovering above home. The formula states that whenever the altitude setting is 0, the vehicle will land at home, and whenever the altitude setting is not 0, the vehicle will hover above home."
  },
  {
    "sentence": "3.SRTL_ACCURACY controls the accuracy (in meters) of the simplification and pruning performed.",
    "formula": "G(SRTL_ACCURACY → A)",
    "explanation": "Here, SRTL_ACCURACY represents the control of accuracy, and A represents the accuracy of the simplification and pruning performed. The formula states that globally, if SRTL_ACCURACY is true, then A is also true."
  },
  {
    "sentence": "4.SRTL_POINTS controls the maximum number of points that can be stored.",
    "formula": "G(SRTL_POINTS → P)",
    "explanation": "Here, SRTL_POINTS represents the control of the maximum number of points, and P represents the maximum number of points that can be stored. The formula states that globally, if SRTL_POINTS is true, then P is also true."
  },
  {
    "sentence": "If the maximum number of points is exhausted, \"SmartRTL deactivated: buffer full\" will be sent to the ground station and the user will not be able to switch into SmartRTL.",
    "formula": "G(P ∧ ¬E → (M ∧ ¬S))",
    "explanation": "Here, P represents the maximum number of points, E represents the availability of points, M represents the message sent to the ground station, and S represents the ability to switch into SmartRTL. The formula states that globally, if the maximum number of points is exhausted (P is true and E is false), then the message will be sent (M is true) and the user will not be able to switch into SmartRTL (S is false)."
  },
  {
    "sentence": "SmartRTL can be deactivated as a mode by simply setting SRTL_POINTS to \"0\".",
    "formula": "G(SRTL_POINTS = 0 → ¬S)",
    "explanation": "Here, SRTL_POINTS represents the control of the maximum number of points, and S represents the SmartRTL mode. The formula states that globally, if SRTL_POINTS is set to 0, then SmartRTL is deactivated (S is false)."
  }
]