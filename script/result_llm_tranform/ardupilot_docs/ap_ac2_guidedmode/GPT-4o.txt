[
  {
    "sentence": "Once the location is reached, the copter will hover at that location, waiting for the next target.",
    "formula": "F(R ∧ G(H))",
    "explanation": "Here, R represents reaching the location, and H represents hovering. The formula ensures that after reaching the location, the copter continues to hover indefinitely."
  },
  {
    "sentence": "The vehicle should fly to the target location and wait there until you enter another location or switch to another mode.",
    "formula": "F(T ∧ (W U (L ∨ M)))",
    "explanation": "T indicates reaching the target location, and W means waiting. The formula states the vehicle waits until another location L is entered or mode M is switched."
  },
  {
    "sentence": "Speed can also be controlled while in GUIDED mode with MAVLink commands like DO_CHANGE_SPEED.",
    "formula": "G(GUIDED → C)",
    "explanation": "GUIDED represents being in GUIDED mode, and C represents controlling speed. This indicates that whenever in GUIDED mode, speed can be controlled."
  },
  {
    "sentence": "Bit 0 (e.g. \"1\") allowing arming in Guided mode from the RC transmitter",
    "formula": "B0 → A",
    "explanation": "B0 indicates Bit 0 being active, and A represents arming in Guided mode. The formula states that if Bit 0 is active, arming is allowed."
  },
  {
    "sentence": "Bit 2 (e.g. \"4\") disables the pilot's ability to change the vehicle's heading using the RC transmitter",
    "formula": "B2 → ¬H",
    "explanation": "B2 indicates Bit 2 being active, and H represents changing heading. The formula states that if Bit 2 is active, changing heading is disabled."
  },
  {
    "sentence": "Bit 3 (e.g. \"8\") changes the interpretation of the SET_ATTITUDE_TARGET MAVLink command's thrust field to be pure thrust expressed as a value between 0 and 1, instead of a climb rate.",
    "formula": "B3 → T",
    "explanation": "B3 indicates Bit 3 being active, and T represents the interpretation of thrust as pure thrust. This changes how thrust is interpreted when Bit 3 is set."
  },
  {
    "sentence": "Bit 4 (e.g. \"16\") disables the position controller's XY axis position error correction.",
    "formula": "B4 → ¬E",
    "explanation": "B4 indicates Bit 4 being active, and E represents position error correction. The formula means that if Bit 4 is active, correction is disabled."
  },
  {
    "sentence": "Bit 6 (e.g. \"64\") enables S-Curve path planning (the same as is used in Auto mode) to reach the position target.",
    "formula": "B6 → S",
    "explanation": "B6 indicates Bit 6 being active, and S represents enabling S-Curve path planning. The formula states that if Bit 6 is active, S-Curve planning is enabled."
  },
  {
    "sentence": "This also allows object avoidance path planning (e.g. Bendy Ruler and Dijkstras) to be used in Guided mode",
    "formula": "G(GUIDED → O)",
    "explanation": "GUIDED represents being in Guided mode, and O represents object avoidance planning. The formula allows for object avoidance whenever in Guided mode."
  },
  {
    "sentence": "If no commands are received from the companion computer for this many seconds, the vehicle will slow to a stop (if velocity and/or acceleration commands were being provided) or hold a level hover (if attitude commands were provided).",
    "formula": "¬C → (V → S) ∧ (A → H)",
    "explanation": "¬C represents no commands received, V represents velocity commands, A represents attitude commands, S represents slowing to a stop, and H represents hovering. The formula states the vehicle will stop or hover depending on the last type of command received."
  },
  {
    "sentence": "The maximum horizontal speed of the copter can be adjusted with the Speed (WPNAV_SPEED) parameter from the Mission Planner's Config/Tuning >> Copter Pids screen (see blue box above).",
    "formula": "G(WPNAV_SPEED → ADJUSTABLE)",
    "explanation": "The predicate WPNAV_SPEED represents the copter's speed parameter, and ADJUSTABLE indicates that it can be modified. The formula expresses that globally, if the speed parameter exists, it can be adjusted."
  },
  {
    "sentence": "A typical copter can reach top speeds of 10m/s ~ 13m/s (i.e. 1000 ~ 1300) before it becomes unable to both maintain altitude and horizontal speed.",
    "formula": "F(REACH_TOP_SPEED ∧ ¬(MAINTAIN_ALT ∧ MAINTAIN_SPEED))",
    "explanation": "REACH_TOP_SPEED indicates the copter reaching speeds of 10m/s to 13m/s. The formula expresses that eventually, the copter reaches this speed and subsequently cannot maintain both altitude (MAINTAIN_ALT) and horizontal speed (MAINTAIN_SPEED)."
  },
  {
    "sentence": "This may be useful if an external controller is providing high speed targets which already include position error correction.",
    "formula": "G(EXTERNAL_CTRL ∧ HIGH_SPEED_TARGET → POSITION_CORR)",
    "explanation": "EXTERNAL_CTRL represents the presence of an external controller, HIGH_SPEED_TARGET indicates high speed targets, and POSITION_CORR means position error correction is accounted for. The formula states that globally, if an external controller provides high-speed targets, position correction is included."
  },
  {
    "sentence": "Bit 5 (e.g. \"32\") is the same as above but affects the position controller's velocity error correction.",
    "formula": "G(BIT5 → VELOCITY_CORR)",
    "explanation": "BIT5 represents the condition of Bit 5, and VELOCITY_CORR denotes the effect on velocity error correction. The formula indicates that globally, if Bit 5 is set, it impacts velocity error correction."
  },
  {
    "sentence": "The GUID_TIMEOUT parameter holds the timeout (in seconds) when the vehicle is being controlled using attitude, velocity and/or acceleration commands.",
    "formula": "G(GUID_TIMEOUT → CONTROLLED(ATT ∨ VEL ∨ ACC))",
    "explanation": "GUID_TIMEOUT is the parameter for the timeout period, while CONTROLLED(ATT ∨ VEL ∨ ACC) represents control via attitude (ATT), velocity (VEL), or acceleration (ACC) commands. The formula expresses that globally, when the GUID_TIMEOUT parameter is set, the vehicle is controlled using one or more of these commands."
  }
]