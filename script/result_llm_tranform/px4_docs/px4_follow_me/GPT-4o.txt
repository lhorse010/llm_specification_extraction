[
  {
    "sentence": "2.Mode requires at least a valid local position estimate (does not require a global position).",
    "formula": "G(L)",
    "explanation": "Here, L represents having a valid local position estimate. The formula ensures that throughout, a valid local position is required, without needing a global position."
  },
  {
    "sentence": "Flying vehicles can't switch to this mode without valid local position.",
    "formula": "G(¬L → ¬M)",
    "explanation": "L denotes a valid local position, and M denotes being in the mode. The formula states that if there is no valid local position, the vehicle cannot switch to this mode."
  },
  {
    "sentence": "Flying vehicles will failsafe if they lose the position estimate.",
    "formula": "G(¬P → F)",
    "explanation": "P represents having a valid position estimate, and F represents the failsafe condition. If the position estimate is lost, the vehicle will eventually enter failsafe."
  },
  {
    "sentence": "4.Mode prevents arming (vehicle must be armed when switching to this mode).",
    "formula": "G(M → A)",
    "explanation": "M represents being in the mode, and A represents the vehicle being armed. The formula indicates that if the vehicle is in this mode, it must have been armed."
  },
  {
    "sentence": "5.Mode requires wind and flight time are within allowed limits (specified via parameters).",
    "formula": "G((W ∧ T) → M)",
    "explanation": "W represents wind within limits, T represents flight time within limits, and M represents being in the mode. The formula ensures that the mode is active only if both conditions are met."
  },
  {
    "sentence": "The vehicle will automatically yaw to face and follow the target from a specified relative angle, distance and height and altitude, depending on the altitude control mode.",
    "formula": "G(A → (Y ∧ F))",
    "explanation": "A represents being in the altitude control mode, Y represents yawing to face and follow the target, and F represents maintaining the specified relative position. This ensures the behavior is dependent on the altitude control mode."
  },
  {
    "sentence": "By default it will follow from directly behind the target at a distance of 8 meters, and a height of 8 meters above the home (arming) position.",
    "formula": "G(D ∧ H)",
    "explanation": "D represents following from a distance of 8 meters, and H represents a height of 8 meters above the home position. The formula ensures these conditions are maintained by default."
  },
  {
    "sentence": "Angle, height, and distance values set using the RC controller are discarded when you exit follow-me mode.",
    "formula": "G(¬F → ¬(A ∧ H ∧ D))",
    "explanation": "F represents being in follow-me mode, A, H, and D represent angle, height, and distance values respectively. The formula indicates these values are discarded upon exiting the mode."
  },
  {
    "sentence": "If you exit Follow-Me mode and activate it again the values will be reset to their defaults.",
    "formula": "G((¬F ∧ X(F)) → R)",
    "explanation": "F represents being in follow-me mode, and R represents resetting values to defaults. The formula states that re-entering the mode after exiting will reset values."
  },
  {
    "sentence": "The following flight precautions should be observed:",
    "formula": "G(P)",
    "explanation": "P represents observing flight precautions. This formula indicates that precautions should be consistently observed throughout."
  },
  {
    "sentence": "It is _safer_ to manually fly to a safe height before engaging follow-me mode than to engage follow-me mode when landed (even though the mode implements auto take off).",
    "formula": "G((¬E ∧ L) → F(S ∧ P))",
    "explanation": "E represents engaging follow-me mode, L represents being landed, S is reaching a safe height, and P is manually flying. The formula indicates that globally, if follow-me mode is not engaged while landed, eventually a safe height is reached by manual flight."
  },
  {
    "sentence": "Be ready to switch back to Position mode if something goes wrong, in particular when using follow-me mode for the first time.",
    "formula": "G((F ∧ W) → F(P))",
    "explanation": "F represents using follow-me mode for the first time, W represents something going wrong, and P is switching to Position mode. The formula states that globally, if follow-me mode is used for the first time and something goes wrong, eventually switch to Position mode."
  },
  {
    "sentence": "You can't switch follow-me mode off using RC stick movements (as that will adjust the properties).",
    "formula": "G((M ∧ ¬C) → ¬O)",
    "explanation": "M represents being in follow-me mode, C is using RC stick movements, and O is switching follow-me mode off. The formula expresses that globally, if in follow-me mode and RC stick movements are not used, follow-me mode cannot be switched off."
  },
  {
    "sentence": "Follow-me mode does not implement any type of obstacle avoidance.",
    "formula": "G(M → ¬A)",
    "explanation": "M represents follow-me mode, and A is obstacle avoidance. The formula states that globally, if in follow-me mode, there is no obstacle avoidance implemented."
  },
  {
    "sentence": "Switch into follow-me mode.",
    "formula": "F(M)",
    "explanation": "M represents follow-me mode. The formula indicates that eventually, follow-me mode is engaged."
  },
  {
    "sentence": "The copter will first ascend to minimum safety altitude of 1 meters above the ground or home, depending on the presence of a distance sensor.",
    "formula": "X((D → H) ∧ (¬D → G))",
    "explanation": "D represents the presence of a distance sensor, H is ascending to altitude relative to home, and G is ascending relative to ground. The formula specifies that next, the copter ascends to either home or ground altitude based on sensor presence."
  },
  {
    "sentence": "The altitude control mode determine whether the vehicle altitude is relative to the home position, terrain height, or the altitude reported by the follow target.",
    "formula": "G(C → (H ∨ T ∨ R))",
    "explanation": "C represents altitude control mode, H is home position, T is terrain height, and R is follow target altitude. The formula states that globally, the altitude control mode determines the vehicle's altitude relative to one of these references."
  },
  {
    "sentence": "2D tracking (the default altitude mode) makes the drone follow at a height relative to the fixed home position (takeoff altitude).",
    "formula": "G(D → H)",
    "explanation": "D represents 2D tracking mode, and H is following at a height relative to home position. The formula indicates that globally, in 2D tracking mode, the drone follows relative to the home position."
  },
  {
    "sentence": "2D + Terrain makes the drone follow at a fixed height relative to the terrain underneath it, using information from a distance sensor.",
    "formula": "G(T → E)",
    "explanation": "T represents 2D + Terrain mode, and E is following relative to terrain. The formula specifies that globally, in 2D + Terrain mode, the drone follows relative to the terrain."
  },
  {
    "sentence": "Do not set the Altitude mode (FLW_TGT_ALT_M) to 3D Tracking when using QGC for Android (or more generally, without checking that FOLLOW_TARGET.altitude is an AMSL value).",
    "formula": "G((Q ∧ ¬A) → ¬S)",
    "explanation": "Q represents using QGC for Android, A is checking FOLLOW_TARGET.altitude as AMSL, and S is setting to 3D Tracking. The formula states that globally, if using QGC without checking AMSL, do not set to 3D Tracking."
  },
  {
    "sentence": "The MAVLink FOLLOW_TARGET message definition expects an altitude relative to mean sea level (AMSL) while QGC on Android is sending an altitude relative to the GPS ellipsoid.",
    "formula": "G(EXPECT_AMSL → ¬SEND_ELLIPSOID)",
    "explanation": "Globally, if the system expects AMSL data, it should not send altitude relative to the GPS ellipsoid. This ensures consistency in altitude references."
  },
  {
    "sentence": "The drone probably won't crash due to the built-in minimum safety altitude limit (1 meter), but it may fly much higher than expected.",
    "formula": "G(SAFETY_LIMIT → ¬CRASH) ∧ F(FLY_HIGH)",
    "explanation": "Globally, the safety limit prevents crashes. However, there is a possibility (eventually) that the drone flies higher than expected."
  },
  {
    "sentence": "1.Set the follow distance to more than 12 meters (8 meters is a \"recommended minimum\").",
    "formula": "G(DISTANCE > 12)",
    "explanation": "Globally, the follow distance should always be set to more than 12 meters, respecting the recommended minimum."
  },
  {
    "sentence": "2.The speed at which you can change the follow angle depends on the maximum tangential velocity setting.",
    "formula": "G(CHANGE_ANGLE_SPEED → DEPENDS_ON(MAX_VELOCITY))",
    "explanation": "Globally, any change in the follow angle speed is dependent on the maximum tangential velocity setting."
  },
  {
    "sentence": "7.The follow target must also be able to supply position information.",
    "formula": "G(FOLLOW_TARGET → SUPPLY_POSITION)",
    "explanation": "Globally, the follow target is required to supply position information to ensure proper tracking."
  },
  {
    "sentence": "1.Follow me mode should only be used in wide open areas that are unobstructed by trees, power lines, houses, etc.",
    "formula": "G(FOLLOW_ME_MODE → WIDE_OPEN_AREA)",
    "explanation": "Globally, using follow me mode is conditional on being in a wide open, unobstructed area."
  },
  {
    "sentence": "It will ascend until it is 3 meters within the follow height to avoid potential collisions before moving horizontally.",
    "formula": "G(ASCEND_Until(H_WITHIN_3_METERS))",
    "explanation": "Globally, the drone will ascend until it reaches a height within 3 meters of the follow height to avoid collisions, before moving horizontally."
  },
  {
    "sentence": "Copter will always adjust its heading to face the target.",
    "formula": "G(ADJUST_HEADING_TO_FACE_TARGET)",
    "explanation": "Globally, the copter continuously adjusts its heading to face the target, ensuring optimal orientation."
  },
  {
    "sentence": "3.3D tracking mode makes the drone follow at a height relative to the follow target, as supplied by its GPS sensor.",
    "formula": "G(3D_TRACKING → FOLLOW_HEIGHT_RELATIVE)",
    "explanation": "Globally, in 3D tracking mode, the drone maintains a height relative to the follow target based on GPS data."
  }
]