[
  {
    "index": 0,
    "formula": "G(FOLL_ENABLE = 1 → X(FollowModeActivated))",
    "explanation": "If Follow Mode is enabled (FOLL_ENABLE = 1), then the vehicle will activate Follow Mode in the next time step."
  },
  {
    "index": 1,
    "formula": "G(FollowModeActivated → X(LeadVehiclePositionPublished))",
    "explanation": "If Follow Mode is activated, then the lead vehicle's position must be published to the vehicle in the next time step."
  },
  {
    "index": 2,
    "formula": "G(LeadVehiclePositionPublished → X(AltitudeHoldControllerActivated))",
    "explanation": "If the lead vehicle's position is published, then the altitude hold controller will be activated in the next time step to maintain the vehicle's current altitude."
  },
  {
    "index": 3,
    "formula": "G(AltitudeHoldControllerActivated → G(Abs(AltitudeError) ≤ 10%))",
    "explanation": "If the altitude hold controller is activated, then the vehicle's altitude error will be within 10% of the desired altitude globally."
  },
  {
    "index": 4,
    "formula": "G(ClimbOrDescendCommand → X(Velocity ≤ 2.5m/s))",
    "explanation": "If a climb or descend command is given, then the vehicle's velocity will be limited to 2.5m/s in the next time step."
  },
  {
    "index": 5,
    "formula": "G(FOLL_DIST_MAX ≤ DistanceToLeadVehicle → X(HoldPosition))",
    "explanation": "If the distance to the lead vehicle exceeds FOLL_DIST_MAX, then the vehicle will hold its position in the next time step."
  },
  {
    "index": 6,
    "formula": "G(FOLL_OFS_X ≠ 0 ∨ FOLL_OFS_Y ≠ 0 ∨ FOLL_OFS_Z ≠ 0 → X(OffsetApplied))",
    "explanation": "If any of the offset parameters (FOLL_OFS_X, FOLL_OFS_Y, FOLL_OFS_Z) are non-zero, then the corresponding offset will be applied in the next time step."
  }
]