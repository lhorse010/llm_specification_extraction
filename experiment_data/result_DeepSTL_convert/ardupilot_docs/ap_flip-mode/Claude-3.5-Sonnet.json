{
    "temporal_logic_formulars": [
        {
            "section-id": 0,
            "sentence-id": 0,
            "sentence": "Vehicle will flip on its roll or pitch axis depending upon the pilot's roll and pitch stick position.",
            "tl": "always ( Vehicleflipi == srol or not ( pitchaxisedpndend == ingupolpotsrolp ) -> not ( pitchstchstickposi == sichpositosioiotin ) and V == ichsichpositiosioio )"
        },
        {
            "section-id": 0,
            "sentence-id": 1,
            "sentence": "Vehicle will rise for 1 second and then rapidly flip.",
            "tl": "always ( Vehicle == 1 second and rapidlyfl == ip -> rise ( r == apidlyflip ) )"
        },
        {
            "section-id": 0,
            "sentence-id": 2,
            "sentence": "The vehicle will not flip again until the switch is brought low and back to high.",
            "tl": "always ( not ( vehicle == flipagainswitchbroughtlow ) and back == highigh )"
        },
        {
            "section-id": 1,
            "sentence-id": 1,
            "sentence": "1.An RCx_OPTION parameter must be set to \"Flip\" which is \"2\"",
            "tl": "eventually ( 1 . AnRCx_OPTION == arameter )"
        },
        {
            "section-id": 1,
            "sentence-id": 2,
            "sentence": "2.Pilot switches to Stabilize, Acro or AltHold flight mode and puts ch7/ch8 switch to ON position",
            "tl": "always ( hPilotswitches == StabilizeAcro or AltHoldfligh == tputsch8switchit )"
        },
        {
            "section-id": 1,
            "sentence-id": 3,
            "sentence": "3.Vehicle will Roll right by default but if roll or pitch stick is held slightly left, forward or back it will flip in that direction",
            "tl": "always ( fall ( lehicleRolb == debydeutrulol ) or pitchstickl == sliforward ) or bac == dackackSck )"
        },
        {
            "section-id": 1,
            "sentence-id": 4,
            "sentence": "4.Vehicle should complete the roll within 2.5sec and will then return to the original flight mode it was in before flip was triggered",
            "tl": "always ( eVhiclecomplete == 2.5 sec and return == originlialflightitititit -> rise ( flgl == flilirlightit ) and flitr == fligligeprigerderde )"
        },
        {
            "section-id": 1,
            "sentence-id": 5,
            "sentence": "5.Pilot may manually exit flip by switching off ch7/ch8 or by moving roll stick to >40deg left or right",
            "tl": "always ( fall ( Pilotmaymanul == lyexitflipbysichin ) or fall ( h == ch8ymovingrolstic ) )"
        },
        {
            "section-id": 1,
            "sentence-id": 7,
            "sentence": "1.Flip_Start (while copter is leaning <45deg) : roll right at 400deg/sec, increase throttle",
            "tl": "always ( Flip_Start > coterleang == ing45deg -> rise ( rolllll400dec == throtltele ) )"
        },
        {
            "section-id": 1,
            "sentence-id": 8,
            "sentence": "2.Flip_Roll (while copter is between +45deg ~ -90) : roll right at 400deg/sec, reduce throttle",
            "tl": "always ( Flip_Roll > copter == 45 deg < 90 -> rolll == 400 degsecreduceducethrotle )"
        },
        {
            "section-id": 1,
            "sentence-id": 9,
            "sentence": "3.Flip_Recover (while copter is between -90deg and original target angle) : use earth frame angle controller to return vehicle to original attitude",
            "tl": "always ( ( elip_Recover == cop_icoter90degle ) and ( origiginaltargleta == rgleterar ) -> usearteanglecoler == rtretureinloreicleicleor = reinliatuiatueile )"
        }
    ]
}